package ru.spb.devpractices.masterbest.serverside.model.order;import lombok.Data;import lombok.ToString;import ru.spb.devpractices.masterbest.serverside.model.User;import javax.persistence.*;import java.io.Serializable;import java.math.BigDecimal;import java.time.LocalDateTime;import java.util.Set;@ToString@Entity@Data@Table(name = "orders")public class Order implements Serializable {    @Id    @Column(name ="number_ikea")    private String numberIkea;    @Column(name = "guid")    private String guid;    @Column(name ="number_mb")    private String numberMB;    @Column(name ="date_start")    private LocalDateTime dateStart;    @Column(name ="date_end")    private LocalDateTime dateEnd;    @OneToOne(fetch = FetchType.EAGER)    private OrderType orderType;    @Column(name ="client")    private String client;    @Column(name ="address")    private String address;    @Column(name ="phone")    private String phone;    @Column (name = "range")    private BigDecimal range;    @Column(name ="comment_from_operator")    private String commentFromOperator;    @Column(name ="comment_from_user")    private String commentFromUser;    @ManyToMany (fetch = FetchType.LAZY)    @JoinTable(            name = "orders_users",            joinColumns = @JoinColumn(name = "number_ikea"),            inverseJoinColumns = @JoinColumn(name = "user_id"))    private Set<User> users;    @OneToMany (fetch = FetchType.LAZY, cascade = CascadeType.ALL)    @JoinTable (name = "order_cart",            joinColumns = @JoinColumn(name = "number_ikea"),            inverseJoinColumns = @JoinColumn(name = "item_id"))    private Set<OrderItem> orderItems;//    @OneToMany (fetch = FetchType.LAZY)//    @JoinTable (name = "order_docs")//    private Set<Document> orderDocs;    //TODO    //Documents    //Project?}