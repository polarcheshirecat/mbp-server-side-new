package ru.spb.devpractices.masterbest.serverside.mappers;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import ru.spb.devpractices.masterbest.serverside.dto.IntegrationOrderDTO;import ru.spb.devpractices.masterbest.serverside.model.User;import ru.spb.devpractices.masterbest.serverside.model.order.Order;import ru.spb.devpractices.masterbest.serverside.model.order.OrderType;import ru.spb.devpractices.masterbest.serverside.repo.OrderTypesRepo;import java.sql.Timestamp;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.HashSet;import java.util.Set;@Slf4j@Componentpublic class IntegrationOrderMapper {    @Autowired    private OrderTypesRepo typesRepo;    public Order toEntity (IntegrationOrderDTO dto){        Order order = new Order();        order.setIkea_number(dto.getNumberIkea());        order.setMb_number(dto.getNumberMB());        try {            order.setDate_start(dateParser(dto.getDateStart()));        } catch (Exception e) {            log.error("Не могу распарсить дату из ДТОшки с заказом " + dto.getNumberIkea(), e);        }        order.setCustomer_name(dto.getClient());        order.setCustomer_address(dto.getAddress());        order.setCustomer_phone(dto.getTelefon());        order.setFalse_visit(dto.getFalseVisit());        order.setComment(dto.getCommentOperator());        OrderType orderType = typesRepo.getOrderTypeByNameContains(dto.getOrderType());        order.setOrder_type(orderType);       return order;    }    public IntegrationOrderDTO toDTO (Order order){        return null;    }    private Timestamp dateParser (String date1c) throws Exception {        String[] splited = date1c.split("T");        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");        Date parsedDate = dateFormat.parse(splited[0] + " " + splited[1]);        return new java.sql.Timestamp(parsedDate.getTime());    }}