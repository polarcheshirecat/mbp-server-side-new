package ru.spb.devpractices.masterbest.serverside.controllers;import org.springframework.core.ParameterizedTypeReference;import org.springframework.http.*;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.client.RestTemplate;import org.springframework.web.util.UriComponentsBuilder;import ru.spb.devpractices.masterbest.serverside.dto.IntegrationOrderDTO;import ru.spb.devpractices.masterbest.serverside.dto.IntegrationOrderStatusHistoryDTO;import ru.spb.devpractices.masterbest.serverside.dto.IntegrationUserStatusDataDTO;import ru.spb.devpractices.masterbest.serverside.model.order.OrderStatus;import ru.spb.devpractices.masterbest.serverside.model.order.OrderStatusHistory;import ru.spb.devpractices.masterbest.serverside.properties.GlobalProperties;import java.util.List;@RestControllerpublic class IntegrationRestController {    private final GlobalProperties properties;    private final RestTemplate restTemplate;    public IntegrationRestController(GlobalProperties properties, RestTemplate restTemplate) {        this.properties = properties;        this.restTemplate = restTemplate;    }    //пихать сюда    //GET: http://10.10.10.1/UT_test/hs/Obmen/Orders/GetOrders?Number=0000-024358    public IntegrationOrderDTO getOrderByNumber(String orderNumber) {        String requestURL = properties.getServer1CPath() + properties.getGetOrderURL();        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(requestURL)                .queryParam("Number", orderNumber);        ResponseEntity<IntegrationOrderDTO> response = restTemplate                .exchange(builder.toUriString(), HttpMethod.GET, null, IntegrationOrderDTO.class);        return response.getBody();    }    //пихать сюда    //http://10.10.10.1/UT_test/hs/Obmen/Orders/GetOrders?UserID=000000085&Status=New    public List<IntegrationOrderDTO> getOrdersByUserIdAndOrderStatus (List<String> userIDs, OrderStatus status){        String requestURL = properties.getServer1CPath() + properties.getGetOrderURL();        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(requestURL)                .queryParam("UserID", userIDs)                .queryParam("Status", status.name());        ResponseEntity<List<IntegrationOrderDTO>> response = restTemplate                .exchange(builder.toUriString(), HttpMethod.GET, null,                        new ParameterizedTypeReference<List<IntegrationOrderDTO>>(){});        return response.getBody();    }    //пихать сюда    //http://10.10.10.1/UT_test/hs/Obmen/Orders/SetStatus    public boolean setOrderUserStatus (IntegrationOrderStatusHistoryDTO dto){        String requestURL = properties.getServer1CPath() + properties.getSetOrderStatusUrl();        HttpEntity<IntegrationOrderStatusHistoryDTO> request = new HttpEntity<>(dto);        ResponseEntity<IntegrationOrderStatusHistoryDTO> response =  restTemplate                .exchange(requestURL, HttpMethod.POST, request, IntegrationOrderStatusHistoryDTO.class);        return response.getStatusCode() == HttpStatus.OK ? true : false;    }    //пихать сюда    //http://10.10.10.1/UT_test/hs/Obmen/Collectors/SetStatus    public boolean setUserStatus (IntegrationUserStatusDataDTO dto){        String requestURL = properties.getServer1CPath() + properties.getSetUserStatusUrl();        HttpEntity<IntegrationUserStatusDataDTO> request = new HttpEntity<>(dto);        ResponseEntity<IntegrationUserStatusDataDTO> response =  restTemplate                .exchange(requestURL, HttpMethod.POST, request, IntegrationUserStatusDataDTO.class);        return response.getStatusCode() == HttpStatus.OK ? true : false;    }}