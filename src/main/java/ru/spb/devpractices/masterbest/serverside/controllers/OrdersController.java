package ru.spb.devpractices.masterbest.serverside.controllers;import lombok.extern.slf4j.Slf4j;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import ru.spb.devpractices.masterbest.serverside.exceptions.UserNotFoundException;import ru.spb.devpractices.masterbest.serverside.model.User;import ru.spb.devpractices.masterbest.serverside.model.order.Order;import ru.spb.devpractices.masterbest.serverside.services.model.OrdersService;import ru.spb.devpractices.masterbest.serverside.services.model.UserService;import java.util.List;@Slf4j@RestController@RequestMapping("/orderservice")public class OrdersController {    private final OrdersService ordersService;    private final UserService userService;    public OrdersController(OrdersService ordersService, UserService userService) {        this.ordersService = ordersService;        this.userService = userService;    }    @CrossOrigin    @RequestMapping (value = "/getOrdersHistory", params = {"userId"})    public ResponseEntity<?> getOrderInfoByUserId (@RequestParam(value = "userId") String userId){        User user = null;        try {            user = userService.getUserById(Long.valueOf(userId));        } catch (UserNotFoundException ex ){            return ResponseEntity.notFound().build();        }        List<Order> orders = ordersService.getAllByUserId(Long.valueOf(userId));        return new ResponseEntity<>(orders, HttpStatus.OK);    }}