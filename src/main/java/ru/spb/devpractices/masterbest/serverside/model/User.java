package ru.spb.devpractices.masterbest.serverside.model;import lombok.Data;import org.hibernate.annotations.CreationTimestamp;import ru.spb.devpractices.masterbest.serverside.model.order.Order;import ru.spb.devpractices.masterbest.serverside.model.order.OrderStatusHistory;import javax.persistence.*;import java.io.Serializable;import java.sql.Timestamp;import java.util.Collection;import java.util.List;import java.util.Set;@Entity@Table(name ="users")@Datapublic class User implements Serializable {    @Id    @Column(name ="user_id")    private Long id;    @Column(name ="name")    private String name;    @Column(name="current_status")    @Enumerated(EnumType.STRING)    private UserStatus currentStatus = UserStatus.FREE;    @Column(name="future_status")    @Enumerated(EnumType.STRING)    private UserStatus futureStatus;    @Column(name="username")    private String username;    @Column(name="password")    private String password;    @Column(name = "active")    private Boolean active = true;    @Column(name="role")    @Enumerated(EnumType.STRING)    private UserRole role = UserRole.USER;    @OneToMany(mappedBy = "user")    private Set<OrderStatusHistory> orderStatusHistory;    @ManyToMany(mappedBy = "users")    private Collection<Order> orders;}